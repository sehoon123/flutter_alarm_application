def localProperties = new Properties()
def localPropertiesFile = rootProject.file("local.properties")
if (localPropertiesFile.exists()) {
    localPropertiesFile.withInputStream { stream ->
        localProperties.load(stream)
    }
}

plugins {
    id "com.android.application"
    id "kotlin-android"
    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
    id 'com.google.gms.google-services'
    id "dev.flutter.flutter-gradle-plugin"
}

android {
    namespace = "com.techjung.alarmshare"
    compileSdk = flutter.compileSdkVersion
    ndkVersion = flutter.ndkVersion

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId = "com.techjung.alarmshare"
        // You can update the following values to match your application needs.
        // For more information, see: https://flutter.dev/to/review-gradle-config.
        minSdk = flutter.minSdkVersion
        targetSdk = flutter.targetSdkVersion
        versionCode = flutter.versionCode
        versionName = flutter.versionName
        minSdkVersion 23
        manifestPlaceholders = [kakaoNativeAppKey: localProperties['kakaoNativeAppKey']]
    }

    dependencies {
        implementation 'androidx.appcompat:appcompat:1.4.0' // Required for AppCompat themes
        implementation 'com.google.android.material:material:1.6.0' // Required for Material Components themes
        // Other dependencies
        implementation platform('com.google.firebase:firebase-bom:33.3.0')
        implementation 'com.google.firebase:firebase-analytics'
        implementation 'com.google.android.gms:play-services-auth:20.5.0'
    }

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig = signingConfigs.debug
        }
    }
}

flutter {
    source = "../.."
}

apply from: project(':flutter_config').projectDir.getPath() + "/dotenv.gradle"